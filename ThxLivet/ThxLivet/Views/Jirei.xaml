<Window x:Class="ThxLivet.Views.Jirei"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThxLivet.Views"
        xmlns:vm="clr-namespace:ThxLivet.ViewModels"
        Title="Jirei" Height="350" Width="525">

    <Window.Background>
        <ImageBrush ImageSource = "../Image/emoi_haikei.jpg" Stretch="UniformToFill"/>
    </Window.Background>
    
    <Window.DataContext>
        <vm:JireiViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="359*" />
            
            <ColumnDefinition Width="153*" />
        </Grid.ColumnDefinitions>

        <GridSplitter Grid.Column="1" Width="5" ResizeDirection="Columns"
VerticalAlignment="Stretch" />

        <DataGrid Name="dataGrid" AutoGenerateColumns="False" Margin="10,10,3,10" >
            //SelectionChanged="DataGrid_SelectionChanged"//
            <DataGrid.Columns>
                <DataGridTextColumn Header="送信日" Binding="{Binding Name}" />
                <DataGridTextColumn Header="To" Binding="{Binding AuthMember}" />
                <DataGridTextColumn Header="From" Binding="{Binding AuthMember}" />
                <DataGridTextColumn Header="タイトル" Binding="{Binding AuthMember}" />
                <DataGridTextColumn Header="助けて貰った日" Binding="{Binding AuthMember}" />
            </DataGrid.Columns>
        </DataGrid>

        <ComboBox Canvas.Left="240" Canvas.Top="165" Text="{Binding User.Name}" Grid.Column="2" Margin="21,61,21,229">
            <TextBlock Text="1" Width="350" Canvas.Left="180" Canvas.Top="165" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            <TextBlock Text="2" Width="350" Canvas.Left="180" Canvas.Top="165" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            <TextBlock Text="3" Width="350" Canvas.Left="180" Canvas.Top="165" Height="55" Background="black" Foreground="white"  FontSize="40"/>
        </ComboBox>

        <Canvas Grid.ColumnSpan="2">
            <Button Grid.Column="2" Content="戻る" RenderTransformOrigin="2.615,0.85" Height="20" Canvas.Left="388" Width="100" Canvas.Top="208" />
        </Canvas>
    </Grid>

</Window>
