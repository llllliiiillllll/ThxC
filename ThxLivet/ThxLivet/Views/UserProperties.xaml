<Window x:Class="ThxLivet.Views.UserProperties"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThxLivet.Views"
        xmlns:vm="clr-namespace:ThxLivet.ViewModels"
        Title="アカウント管理" Height="697" Width="704">

    <Window.Background>
        <ImageBrush ImageSource = "../Image/emoi_haikei.jpg" Stretch="UniformToFill"/>
    </Window.Background>

    <Window.DataContext>
        <vm:UserPropertiesViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Canvas Grid.ColumnSpan="2">
            <Button Background="White" Canvas.Left="505" Canvas.Top="425" Content="削除" Height="50" Width="115" FontSize="30" Command="{Binding LogonCommand}"/>
            <Button Background="White" Canvas.Left="595" Canvas.Top="606" Content="戻る" Height="50" Width="91" FontSize="30" Command="{Binding LogonCommand}" />
            <Button Background="White" Canvas.Left="505" Canvas.Top="510" Content="編集" Height="50" Width="115" FontSize="30" Command="{Binding LogonCommand}"/>
            <Button Background="White" Canvas.Top="345" Content="新規作成へ" Height="50" Width="165" FontSize="30" Command="{Binding LogonCommand}"  Canvas.Left="505" RenderTransformOrigin="0.758,1"/>

            <ComboBox Width="180" Canvas.Left="440" Canvas.Top="235" Height="55" SelectedIndex='0' FontSize="40">
                <ComboBoxItem Content="Eric" TabIndex='0' Width="350" Canvas.Left="180" Canvas.Top="165" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            </ComboBox>


            <ComboBox Width="180" Canvas.Left="440" Canvas.Top="125" Height="55" SelectedIndex='0' FontSize="40">
                <ComboBoxItem Content="Eric" TabIndex='0' Width="350" Canvas.Left="180" Canvas.Top="165" Height="55" Background="black" Foreground="white"  FontSize="40"/>
            </ComboBox>
            <TextBlock Text="部署" Foreground="white"  FontSize="40" Canvas.Left="440" Canvas.Top="65" Height="55" Width="175"/>
            <TextBlock Text="課" Foreground="white"  FontSize="40" Canvas.Left="440" Canvas.Top="185" Height="55" Width="175"/>

            <DataGrid Name="dataGrid" AutoGenerateColumns="False" Height="425" Canvas.Left="120" Canvas.Top="125" Width="200" >
                //SelectionChanged="DataGrid_SelectionChanged"//
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名前" Binding="{Binding Name}" Width="50"/>
                    <DataGridTextColumn Header="ふりがな" Binding="{Binding AuthMember}" Width="50" />
                    <DataGridTextColumn Header="部署" Binding="{Binding AuthMember}" Width="50" />
                    <DataGridTextColumn Header="課" Binding="{Binding AuthMember}" Width="50" />
                </DataGrid.Columns>
            </DataGrid>

        </Canvas>
    </Grid>
</Window>
